

```markdown
# üöÄ **An√°lise de Cancelamento de Clientes (Churn Analysis)**

Este projeto tem como objetivo realizar uma an√°lise de cancelamento de clientes (churn) e identificar os fatores que influenciam o cancelamento de assinaturas. A an√°lise √© baseada em uma base de dados de cancelamento de clientes, processada e analisada para gerar insights valiosos.

---

## üß† **Objetivo do Projeto**

O objetivo deste projeto √© entender os fatores que levam os clientes a cancelarem suas assinaturas. Utilizamos an√°lise explorat√≥ria e limpeza de dados para identificar vari√°veis que impactam o cancelamento, como o tipo de contrato, n√∫mero de intera√ß√µes com o call center e atraso no pagamento.

---

## ‚öôÔ∏è **Etapas do Projeto**

### 1. **Importa√ß√£o da Base de Dados**
Primeiramente, importamos a base de dados `cancelamentos_sample.csv`, que cont√©m informa√ß√µes sobre os clientes e suas intera√ß√µes com a empresa.

```python
Tabela = pd.read_csv("cancelamentos_sample.csv")
```

---

### 2. **Visualiza√ß√£o da Base de Dados**
Ap√≥s a importa√ß√£o, realizamos uma visualiza√ß√£o inicial para entender a estrutura dos dados, identificar colunas e valores presentes.

```python
print(Tabela)
```

---

### 3. **Corre√ß√£o de Problemas na Base de Dados**
Identificamos e corrigimos problemas como dados ausentes e colunas desnecess√°rias. Por exemplo, removemos a coluna `CustomerID` e eliminamos as linhas com valores ausentes.

```python
Tabela = Tabela.drop(columns=["CustomerID"])
Tabela = Tabela.dropna()
```

---

### 4. **An√°lise Inicial**
Realizamos uma an√°lise inicial para verificar quantos clientes cancelaram suas assinaturas e qual a porcentagem de cancelamento.

```python
Tabela["cancelou"].value_counts()
Tabela["cancelou"].value_counts(normalize=True)
```

---

### 5. **An√°lise das Causas de Cancelamento**
Com base nas vari√°veis dispon√≠veis, comparamos as colunas com a coluna de cancelamento para identificar os fatores que mais impactam o churn. Utilizamos gr√°ficos de histograma para visualizar essas rela√ß√µes.

```python
import plotly.express as px
Grafico = px.histogram(Tabela, x="duracao_contrato", color="cancelou")
Grafico.show(renderer="notebook")
```

---

### 6. **Limpeza de Dados**
Aplicamos filtros para resolver problemas identificados:

- Remo√ß√£o de clientes com contrato mensal.
- Filtragem de clientes que realizaram mais de 4 liga√ß√µes ao call center.
- Considera√ß√£o apenas de clientes com atraso menor que 20 dias.

```python
Tabela = Tabela[Tabela["duracao_contrato"] != "Monthly"]
Tabela = Tabela[Tabela["ligacoes_callcenter"] < 4]
Tabela = Tabela[Tabela["dias_atraso"] < 20]
```

---

### 7. **Resultado Final**
Ap√≥s a limpeza e organiza√ß√£o dos dados, obtemos insights valiosos sobre a taxa de cancelamento. Confira o resultado final:

```python
print(Tabela["cancelou"].value_counts(normalize=True))
```

---

## üì¶ **Requisitos**

Este projeto utiliza as seguintes bibliotecas:

- `pandas` para manipula√ß√£o de dados.
- `plotly` para visualiza√ß√£o de dados.
- `nbformat` para trabalhar com notebooks Jupyter.

### Para instalar as depend√™ncias:

```bash
pip install nbformat>=4.2.0 ipykernel plotly pandas numpy openpyxl
```

---

## üöÄ **Como Rodar o Projeto**

1. **Clone o reposit√≥rio**:

```bash
git clone https://github.com/seu_usuario/Projeto_Churn.git
```

2. **Navegue at√© o diret√≥rio do projeto**:

```bash
cd Projeto_Churn
```

3. **Abra o Jupyter Notebook**:

```bash
jupyter notebook
```

4. **Execute as c√©lulas no notebook** para rodar a an√°lise.

---

## ü§ù **Contribui√ß√µes**

Se voc√™ deseja contribuir para este projeto, fa√ßa um fork deste reposit√≥rio, realize suas modifica√ß√µes e envie um pull request.

---

## üìú **Licen√ßa**

Este projeto est√° licenciado sob a Licen√ßa MIT. Consulte o arquivo [LICENSE](LICENSE) para mais detalhes.

---

## üé® **Design e Estilo**

- **T√≠tulo**: Utilizei √≠cones para deixar o t√≠tulo mais chamativo.
- **Cores**: Usando emojis para destacar as se√ß√µes e tornar o visual mais agrad√°vel.
- **Separadores**: Criei divis√µes com `---` para organizar melhor o conte√∫do e torn√°-lo mais limpo.

---

**üéâ Agradecemos pela sua visita!** üòä
```

---

### Explica√ß√£o:

- **Emojis**: Usei emojis para tornar o texto mais visual e interativo. Eles ajudam a destacar se√ß√µes e t√≠tulos.
- **T√≠tulos grandes e claros**: Usei t√≠tulos mais destacados e explicativos, seguidos de descri√ß√µes claras para facilitar a leitura.
- **Separadores**: As linhas horizontais (`---`) ajudam a separar visualmente as diferentes se√ß√µes, tornando o conte√∫do mais organizado e agrad√°vel de ler.

### Como aplicar:

1. **Crie o arquivo** `README.md` no seu projeto.
2. **Copie e cole** o conte√∫do acima.
3. **Salve** o arquivo e fa√ßa o commit para o seu reposit√≥rio:

```bash
git add README.md
git commit -m "Adicionando README estilizado"
git push
```
