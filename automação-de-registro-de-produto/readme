
```markdown
# üìä **Automa√ß√£o de Cadastro de Produtos**

Este projeto tem como objetivo automatizar o processo de cadastro de produtos em um sistema utilizando a biblioteca **PyAutoGUI** para controlar o mouse e o teclado, e a **pandas** para ler os dados de um arquivo CSV. O fluxo realiza o login no sistema e cadastra automaticamente os produtos a partir de uma tabela de dados.

---

## üöÄ **Objetivo do Projeto**

Automatizar o cadastro de produtos em um sistema web, realizando os seguintes passos:

1. **Abrir o sistema** da empresa;
2. **Fazer login** no sistema;
3. **Importar a base de dados** de produtos;
4. **Cadastrar os produtos** de forma automatizada.

---

## üßë‚Äçüíª **C√≥digo**

### **1. Importa√ß√£o das Bibliotecas e Configura√ß√£o Inicial**

Importa-se as bibliotecas necess√°rias, como o `pyautogui` para automa√ß√£o do teclado e mouse, e o `pandas` para leitura do arquivo CSV com os dados dos produtos.

```python
import pandas as pd  # Renomeando pandas para pd, √© uma conven√ß√£o mais comum
import pyautogui
import time

# Configura√ß√µes iniciais do pyautogui
pyautogui.PAUSE = 1  # Intervalo de 1 segundo entre cada comando do pyautogui
```

---

### **2. Abrir o Sistema e Fazer Login**

Usa-se o PyAutoGUI para abrir o navegador **Microsoft Edge** e acessar a p√°gina de login do sistema.

```python
# Passo 1: Abrir o sistema da empresa
pyautogui.press("Win")  # Pressiona a tecla Windows (Menu Iniciar)
pyautogui.write("edge")  # Digita "edge" para abrir o Microsoft Edge
pyautogui.press("enter")  # Pressiona Enter para abrir o navegador
time.sleep(3)  # Espera 3 segundos para o navegador carregar

# Passo 2: Fazer login no sistema
pyautogui.write("https://dlp.hashtagtreinamentos.com/python/intensivao/login")  # Digita o link de login
pyautogui.press("enter")  # Pressiona Enter para acessar o site
time.sleep(2)  # Aguarda 2 segundos para a p√°gina carregar

# Preencher os campos de login
pyautogui.click(x=525, y=403)  # Clica no campo de email (ajuste as coordenadas conforme necess√°rio)
pyautogui.write("pythonimpressionador@gmail.com")  # Digita o e-mail
pyautogui.press("tab")  # Move para o campo de senha
pyautogui.write("Sua senha")  # Digita a senha (substitua pela senha real)
pyautogui.press("enter")  # Pressiona Enter para fazer o login
time.sleep(3)  # Aguarda 3 segundos para o sistema carregar
```

---

### **3. Importar a Base de Dados dos Produtos**

Ap√≥s o login, a base de dados dos produtos √© importada utilizando o **pandas**.

```python
# Passo 3: Importar a base de dados dos produtos
Tabela = pd.read_csv("Produtos.csv")  # L√™ o arquivo CSV com os dados dos produtos
print(Tabela)  # Exibe a tabela para verificar se os dados foram carregados corretamente

time.sleep(2)  # Aguarda 2 segundos para garantir que o sistema esteja pronto para os cadastros
```

---

### **4. Cadastro Autom√°tico de Produtos**

Com a base de dados carregada, o c√≥digo preenche automaticamente os campos do formul√°rio do sistema para cadastrar os produtos, um a um.

```python
# Passo 4: Cadastrar os produtos
for linha in Tabela.index:
    # Clicar no campo de c√≥digo do produto
    pyautogui.click(x=511, y=282)  # Ajuste as coordenadas conforme necess√°rio

    # Preencher os campos do formul√°rio
    codigo = Tabela.loc[linha, "codigo"]
    pyautogui.write(str(codigo))  # Preenche o campo "c√≥digo"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    marca = Tabela.loc[linha, "marca"]
    pyautogui.write(str(marca))  # Preenche o campo "marca"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    tipo = Tabela.loc[linha, "tipo"]
    pyautogui.write(str(tipo))  # Preenche o campo "tipo"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    categoria = Tabela.loc[linha, "categoria"]
    pyautogui.write(str(categoria))  # Preenche o campo "categoria"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    preco_unitario = Tabela.loc[linha, "preco_unitario"]
    pyautogui.write(str(preco_unitario))  # Preenche o campo "pre√ßo unit√°rio"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    custo = Tabela.loc[linha, "custo"]
    pyautogui.write(str(custo))  # Preenche o campo "custo"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    obs = str(Tabela.loc[linha, "obs"])
    if obs != "nan":  # Verifica se o campo "obs" n√£o est√° vazio (NaN)
        pyautogui.write(obs)  # Preenche o campo "observa√ß√µes"
    pyautogui.press("tab")  # Move para o pr√≥ximo campo

    # Enviar o formul√°rio
    pyautogui.press("enter")  # Envia o formul√°rio
    pyautogui.scroll(10000)  # Rola a p√°gina para cima (para visualizar o pr√≥ximo cadastro)
    time.sleep(1)  # Espera 1 segundo antes de cadastrar o pr√≥ximo produto

print("Cadastro de produtos conclu√≠do com sucesso!")
```

---

### **5. Fechar o Navegador**

Ap√≥s o cadastro de todos os produtos, o navegador √© fechado automaticamente.

```python
# Fechar o navegador ap√≥s concluir o processo
pyautogui.hotkey('alt', 'f4')  # Fecha o navegador (ajuste se necess√°rio)
```

---

## ‚öôÔ∏è **Requisitos**

Para rodar este projeto, voc√™ precisar√° das seguintes bibliotecas Python:

- **pandas**: Para manipula√ß√£o de dados e leitura de arquivos CSV.
- **pyautogui**: Para automa√ß√£o do teclado e mouse.

### Para instalar as depend√™ncias, execute:

```bash
pip install pandas pyautogui
```

---

## üèÅ **Como Rodar o Projeto**

1. Clone este reposit√≥rio para sua m√°quina local:

```bash
git clone https://github.com/Romeropedro1/Automacao_Cadastro_Produtos.git
```

2. Navegue at√© o diret√≥rio do projeto:

```bash
cd Automacao_Cadastro_Produtos
```

3. Execute o script Python:

```bash
python seu_script.py
```

---

## ü§ù **Contribui√ß√µes**

Se voc√™ deseja contribuir para este projeto, fa√ßa um fork deste reposit√≥rio, realize suas modifica√ß√µes e envie um pull request.

---

## üìú **Licen√ßa**

Este projeto est√° licenciado sob a Licen√ßa MIT. Consulte o arquivo [LICENSE](LICENSE) para mais detalhes.

---

**üöÄ** **Agradecemos pela sua contribui√ß√£o e participa√ß√£o!** üòä
```

---
