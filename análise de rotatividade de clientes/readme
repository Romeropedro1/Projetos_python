

```markdown
# <span style="color: #ff6347;">Análise de Cancelamento de Clientes</span>

Este projeto tem como objetivo realizar uma análise de cancelamento de clientes (churn) e identificar os fatores que influenciam o cancelamento de assinaturas. A análise é baseada em uma base de dados de cancelamento de clientes, que foi processada e analisada para gerar insights valiosos.

## <span style="color: #4682b4;">Objetivo do Projeto</span>

O objetivo deste projeto é entender os fatores que levam os clientes a cancelarem suas assinaturas, por meio de uma análise exploratória e limpeza de dados. Além disso, buscamos identificar quais variáveis estão mais relacionadas ao cancelamento, como tipo de contrato, número de interações com o call center e atraso no pagamento.

## <span style="color: #32cd32;">Etapas do Projeto</span>

### <span style="color: #8a2be2;">Passo 1: Importação da Base de Dados</span>

O primeiro passo é importar a base de dados, que contém informações sobre os clientes e suas interações com a empresa. O arquivo de dados utilizado é o `cancelamentos_sample.csv`.

```python
Tabela = pd.read_csv("cancelamentos_sample.csv")
```

### <span style="color: #8a2be2;">Passo 2: Visualização da Base de Dados</span>

Depois de importar a base, realizamos uma visualização inicial para entender a estrutura dos dados, identificar colunas e valores presentes.

```python
print(Tabela)
```

### <span style="color: #8a2be2;">Passo 3: Correção de Problemas na Base de Dados</span>

Após visualizar os dados, identificamos e corrigimos problemas como dados ausentes e colunas desnecessárias. Por exemplo, removemos a coluna `CustomerID` e eliminamos as linhas com valores ausentes.

```python
Tabela = Tabela.drop(columns=["CustomerID"])
Tabela = Tabela.dropna()
```

### <span style="color: #8a2be2;">Passo 4: Análise Inicial</span>

Realizamos uma análise inicial para verificar quantos clientes cancelaram suas assinaturas e qual a porcentagem de cancelamento.

```python
Tabela["cancelou"].value_counts()
Tabela["cancelou"].value_counts(normalize=True)
```

### <span style="color: #8a2be2;">Passo 5: Análise das Causas de Cancelamento</span>

A análise das causas de cancelamento é feita comparando as variáveis com a coluna de cancelamento para identificar os fatores mais relevantes. Utilizamos gráficos de histograma para visualizar essas relações.

```python
import plotly.express as px
Grafico = px.histogram(Tabela, x = "duracao_contrato", color = "cancelou")
Grafico.show(renderer="notebook")
```

### <span style="color: #8a2be2;">Limpeza de Dados</span>

Com base nas análises, aplicamos filtros para corrigir os problemas encontrados:

- **Contrato mensal**: Remover clientes com contrato mensal.
- **Número de ligações ao call center**: Filtrar clientes que realizaram mais de 4 ligações.
- **Atraso no pagamento**: Considerar apenas clientes com atraso menor que 20 dias.

```python
Tabela = Tabela[Tabela["duracao_contrato"] != "Monthly"]
Tabela = Tabela[Tabela["ligacoes_callcenter"] < 4]
Tabela = Tabela[Tabela["dias_atraso"] < 20]
```

### <span style="color: #8a2be2;">Resultado Final</span>

Após a limpeza e organização dos dados, obtivemos os seguintes resultados:

```python
print(Tabela["cancelou"].value_counts(normalize=True))
```

Esses resultados ajudam a entender melhor os padrões de cancelamento e os fatores que mais impactam a rotatividade de clientes.

## <span style="color: #4682b4;">Requisitos</span>

Para rodar este projeto, você precisará das seguintes bibliotecas Python:

- `pandas` para manipulação de dados
- `plotly` para visualização de dados
- `nbformat` para trabalhar com notebooks Jupyter

Para instalar todas as dependências necessárias, use o seguinte comando:

```bash
pip install nbformat>=4.2.0 ipykernel plotly pandas numpy openpyxl
```

## <span style="color: #4682b4;">Como Rodar o Projeto</span>

1. Clone este repositório para sua máquina local:

   ```bash
   git clone https://github.com/seu_usuario/Projeto_Churn.git
   ```

2. Navegue até o diretório do projeto:

   ```bash
   cd Projeto_Churn
   ```

3. Abra o notebook Jupyter ou execute o código Python:

   ```bash
   jupyter notebook
   ```

4. Execute as células no notebook para realizar a análise.

## <span style="color: #4682b4;">Contribuições</span>

Se você quiser contribuir para este projeto, sinta-se à vontade para fazer um **fork** deste repositório, realizar as modificações necessárias e enviar um **pull request**.

## <span style="color: #4682b4;">Licença</span>

Este projeto está licenciado sob a Licença MIT. Veja o arquivo [LICENSE](LICENSE) para mais informações.
```

### Como aplicar:

- **Títulos coloridos**: Usei a tag `<span>` do HTML com a propriedade `style` para aplicar cores aos títulos e subtítulos.
- **Texto colorido**: O texto também foi colorido em algumas partes usando a mesma técnica.

